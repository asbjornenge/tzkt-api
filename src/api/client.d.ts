import type { BaseHttpRequest } from './core/BaseHttpRequest.js';
import type { OpenAPIConfig } from './core/OpenAPI.js';
import { AccountsService } from './services/AccountsService.js';
import { BigMapsService } from './services/BigMapsService.js';
import { BlocksService } from './services/BlocksService.js';
import { CommitmentsService } from './services/CommitmentsService.js';
import { ConstantsService } from './services/ConstantsService.js';
import { ContractsService } from './services/ContractsService.js';
import { CyclesService } from './services/CyclesService.js';
import { DelegatesService } from './services/DelegatesService.js';
import { HeadService } from './services/HeadService.js';
import { OperationsService } from './services/OperationsService.js';
import { ProtocolsService } from './services/ProtocolsService.js';
import { QuotesService } from './services/QuotesService.js';
import { RewardsService } from './services/RewardsService.js';
import { RightsService } from './services/RightsService.js';
import { SoftwareService } from './services/SoftwareService.js';
import { StatisticsService } from './services/StatisticsService.js';
import { VotingService } from './services/VotingService.js';
declare type HttpRequestConstructor = new (config: OpenAPIConfig) => BaseHttpRequest;
export declare class TzKTAPI {
    readonly accounts: AccountsService;
    readonly bigMaps: BigMapsService;
    readonly blocks: BlocksService;
    readonly commitments: CommitmentsService;
    readonly constants: ConstantsService;
    readonly contracts: ContractsService;
    readonly cycles: CyclesService;
    readonly delegates: DelegatesService;
    readonly head: HeadService;
    readonly operations: OperationsService;
    readonly protocols: ProtocolsService;
    readonly quotes: QuotesService;
    readonly rewards: RewardsService;
    readonly rights: RightsService;
    readonly software: SoftwareService;
    readonly statistics: StatisticsService;
    readonly voting: VotingService;
    private readonly request;
    constructor(config?: Partial<OpenAPIConfig>, HttpRequest?: HttpRequestConstructor);
}
export {};
